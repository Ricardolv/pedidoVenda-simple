<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <!-- Declarando um Bean no Spring -->
    <beans:bean id="appUserDetailsService" class="br.com.richard.security.AppUserDetailsService" />
    
    <!-- comentario 2 Resolvendo o problema com requisição Ajax se implementar Spring com JSF use este codigo -->
    <beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:property name="accessDeniedHandler" ref="jsfAccessDeniedHandler"/>
		<beans:property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
	</beans:bean>
	
	<beans:bean id="jsfAccessDeniedHandler" class="br.com.richard.security.JsfAccessDeniedHandler">
	    <beans:property name="loginPath" value="/AcessoNegado.xhtml" />
	    <beans:property name="contextRelative" value="true" />
	</beans:bean>
	
	<beans:bean id="authenticationEntryPoint" class="br.com.richard.security.JsfLoginUrlAuthenticationEntryPoint">
	    <beans:property name="loginFormUrl" value="/Login.xhtml"/>
	    <beans:property name="redirectStrategy" ref="jsfRedirectStrategy" />
	</beans:bean>
	
	<beans:bean id="jsfRedirectStrategy" class="br.com.richard.security.JsfRedirectStrategy"/>
	<!-- FIM comentario 2 -->
    
     <!-- Declarando paginas livres de segurança -->
    <http pattern="/Login.xhtml" security="none" />
    <http pattern="/Erro.xhtml" security="none" />
    <http pattern="/javax.faces.resource/**" security="none" />
    
    <!-- auto-config="true" ->  é criada tela de login automatica -->
	<http auto-config="false" use-expressions="true">
		
		<!-- chamada da solucao customizada no spring comentario 2 -->
		<custom-filter ref="exceptionTranslationFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
	
		<intercept-url pattern="/Login.xhtml"  access="isAuthenticated()" />
		<intercept-url pattern="/Home.xhtml"   access="isAuthenticated()" />
		<intercept-url pattern="/AcessoNegado.xhtml"  access="isAuthenticated()" />
		<intercept-url pattern="/pedidos/**"  access="hasAnyRole('VENDEDORES', 'AUXILIARES', 'ADMINISTRADORES')" />
		<intercept-url pattern="/produtos/**" access="hasAnyRole('ADMINISTRADORES')" />
		<intercept-url pattern="/usuarios/**" access="hasAnyRole('ADMINISTRADORES')" />
		<intercept-url pattern="/grupos/**"   access="hasAnyRole('ADMINISTRADORES')" />
		<intercept-url pattern="/clientes/**" access="hasAnyRole('VENDEDORES', 'AUXILIARES', 'ADMINISTRADORES')" />
		<intercept-url pattern="/relatorios/**"  access="hasAnyRole('VENDEDORES', 'AUXILIARES', 'ADMINISTRADORES')" />
		<intercept-url pattern="/**" 		  access="denyAll" />
		
		
		<form-login login-page="/Login.xhtml" default-target-url="/" authentication-failure-url="/Login.xhtml?invalid=true" 
			  always-use-default-target="true" />
		<logout logout-success-url="/j_spring_security_logout" invalidate-session="true" logout-url="/Login.xhtml" />
	</http>
	
	<authentication-manager>
		<authentication-provider user-service-ref="appUserDetailsService">
				<!-- <password-encoder hash="md5" /> -->
		</authentication-provider>
	</authentication-manager>
           
</beans:beans>